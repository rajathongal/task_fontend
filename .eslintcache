[{"C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\index.js":"1","C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\App.js":"2","C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\reportWebVitals.js":"3","C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\PplCard.js":"4","C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\MenuComponent.js":"5","C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\Header.js":"6","C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\constants.js":"7","C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\footer.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":7076,"mtime":1611338096805,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1254,"mtime":1611334658387,"results":"13","hashOfConfig":"10"},{"size":2577,"mtime":1611329767613,"results":"14","hashOfConfig":"10"},{"size":1970,"mtime":1611331673263,"results":"15","hashOfConfig":"10"},{"size":101,"mtime":1611328357901,"results":"16","hashOfConfig":"10"},{"size":945,"mtime":1611331631062,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"10w5yhc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\index.js",[],["39","40"],"C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\App.js",["41"],"import React, {useState, useEffect, Fragment} from 'react';\nimport './App.css';\nimport PplCard from './PplCard';\nimport { Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TopBar from './Header';\nimport BottomBar from './footer';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [file, setFile] = useState([])\n  const [inputFields, setInputFields] = useState([{\n    name: '',\n    email: '',\n    phonenumber: ''\n  }]);\n\n  const arrayBufferToBase64 = (buffer) => {\n    var binary = '';\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach((b) => binary += String.fromCharCode(b));\n    return window.btoa(binary);\n};\n  \n\n  const handleInputChange = (index, event) => {\n    const values = [...inputFields];\n\n    if(event.target.name === 'name'){\n        values[index].name = event.target.value\n    }\n    else if(event.target.name === 'email'){\n      values[index].email = event.target.value\n    } else if(event.target.name === 'phonenumber'){\n      values[index].phonenumber = event.target.value\n    }\n    setInputFields(values);\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFileUpload = async (e) => {\n    \n    let img = await e.target.files[0];\n    setFile(img);\n  }\n\n  const SubmitTestimonials = async (e) => {\n    e.preventDefault();\n\n    let formData = new FormData();\n    formData.append(\"file\", file)\n    formData.append(\"name\", inputFields[0].name)\n    formData.append(\"email\", inputFields[0].email)\n\n    const Imageoptions = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }\n\n    await axios.post('https://vinayakpd-task.zeet.app/testimonials/newTestimonial', formData, Imageoptions);\n\n    await setOpen(false);\n    window.location.reload();\n  }\n  \n\n  const SubmitStore = async (e) => {\n    e.preventDefault();\n    await axios.post('http://localhost:5002/stores/newStore',{\n      name: inputFields[0].name,\n      email: inputFields[0].email,\n      phonenumber: inputFields[0].phonenumber\n    });\n    await setOpen(false);\n    window.location.reload();\n  }\n\n\n  useEffect(()=>{\n    async function fetchData() {\n      const response = await axios.get('https://vinayakpd-task.zeet.app/testimonials/testimonialFetch')\n      await setUsers(response.data.data)\n    };\n    fetchData() },[])\n\n    \n    return (\n      <>\n      <TopBar/>\n\n      <div> \n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Add Card\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Card</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Add Card\n          </DialogContentText>\n          <form onSubmit={SubmitTestimonials}>\n            {inputFields.map((inputField, index) => (\n              <Fragment key={`${inputField}~${index}`}>\n          <TextField\n            autoFocus\n            name=\"name\"\n            label=\"Name\"\n            variant=\"outlined\"\n            fullWidth\n            value={inputFields[0].name}\n            onChange={(event) => {handleInputChange(index, event)}}\n          />\n         <br/>\n         <br/>\n          <TextField\n            autoFocus\n            name=\"email\"\n            label=\"email\"\n            variant=\"outlined\"\n            fullWidth\n            value={inputFields[0].email}\n            type=\"email\"\n            onChange={(event) => {handleInputChange(index, event)}}\n          />\n          <br/>\n          <br/>\n           <input\n            onChange={handleFileUpload}\n            type=\"file\"\n          />\n              </Fragment>\n            ))}\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={SubmitTestimonials} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n    \n  {/*  <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Create New Store\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n          Create New Store\n          </DialogContentText>\n          <form onSubmit={SubmitTestimonials}>\n            {inputFields.map((inputField, index) => (\n              <Fragment key={`${inputField}~${index}`}>\n          <TextField\n            autoFocus\n            name=\"name\"\n            label=\"Name\"\n            variant=\"outlined\"\n            fullWidth\n            value={inputFields[0].name}\n            onChange={(event) => {handleInputChange(index, event)}}\n          />\n          <TextField\n            autoFocus\n            name=\"email\"\n            label=\"email\"\n            variant=\"outlined\"\n            fullWidth\n            value={inputFields[0].email}\n            type=\"email\"\n            onChange={(event) => {handleInputChange(index, event)}}\n          />\n          <TextField\n            autoFocus\n            name=\"phonenumber\"\n            label=\"phonenumber\"\n            variant=\"outlined\"\n            fullWidth\n            value={inputFields[0].phonenumber}\n            onChange={(event) => {handleInputChange(index, event)}}\n          />\n              </Fragment>\n            ))}\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={SubmitStore} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n            </div>*/}\n      <div className=\"App\">\n          <Grid container spacing={10}\n          style={{padding: '24px'}}\n          >\n            {users.map( users =>{ \n              var base64Flag = `data:${users.img.contentType};base64,`;\n              var imgData = arrayBufferToBase64(users.img.data.data);\n              return(\n                           <Grid key={users._id} item\n                           xs={12} sm={6} md={4} lg={4} xl={3}\n                           > \n                             <PplCard\n                             key={users._id} email={users.email} \n                             name={users.name} base64Flag={base64Flag} imgData={imgData}\n                             />\n                           </Grid> \n            )}\n              )}\n            \n          </Grid>\n      </div>  \n    <BottomBar/>\n</>\n  );\n}\nexport default App;","C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\reportWebVitals.js",[],"C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\PplCard.js",["42"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles({\r\ncard: { maxWidth: 345, },\r\nmedia: { height: 140, }, });\r\n\r\nexport default function PplCard({ key, email, name, base64Flag, imgData}) {\r\nconst classes = useStyles();\r\n\r\nreturn ( \r\n    <>\r\n<Card className={classes.card}> \r\n    <CardActionArea>\r\n        <CardMedia className={classes.media} image={base64Flag + imgData}/> \r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                   {name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {email} \r\n                </Typography> \r\n            </CardContent> \r\n    </CardActionArea>\r\n        <CardActions>\r\n        \r\n    </CardActions>\r\n</Card> \r\n\r\n</>\r\n    ); \r\n}","C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\MenuComponent.js",[],"C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\Header.js",["43"],"/**import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    },\r\n    body: {\r\n        height: '100%',\r\n    },\r\n    header: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        left: 0,\r\n        zindex: 2,\r\n      },\r\n  });\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <>\r\n       <br/>\r\n        <head>\r\n            <link href=\"//cdn.muicss.com/mui-latest/css/mui.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n        </head>\r\n        <header class={classes.header}>\r\n            <td class=\"mui--text-title\">Brand.io</td>\r\n        </header>\r\n        <br/>\r\n        </>\r\n    )\r\n}; */\r\n\r\nimport React from 'react';\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    makeStyles,\r\n    SvgIcon\r\n  } from '@material-ui/core';\r\n  import {THEMES} from './constants';\r\n  import clsx from 'clsx';\r\n  import MenuComponent from './MenuComponent';\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      zIndex: theme.zIndex.drawer + 100,\r\n      ...theme.name === THEMES.LIGHT ? {\r\n        boxShadow: 'none',\r\n        backgroundColor: theme.palette.primary.main\r\n      } : {},\r\n      ...theme.name === THEMES.ONE_DARK ? {\r\n        backgroundColor: theme.palette.background.default\r\n      } : {}\r\n    },\r\n    toolbar: {\r\n      minHeight: 64\r\n    },\r\n    header: {\r\n        paddingBottom: 80\r\n    }\r\n  }));\r\n\r\n\r\n  const TopBar = ({\r\n    className,\r\n    onMobileNavOpen,\r\n    ...rest\r\n  }) => {\r\n    const classes = useStyles();\r\n    return (\r\n    <header class={classes.header}>\r\n        <AppBar\r\n            className={clsx(classes.root, className)}\r\n            {...rest}\r\n        >\r\n            <Toolbar className={classes.toolbar}>\r\n                <MenuComponent/>\r\n            </Toolbar>\r\n        </AppBar>\r\n    </header>\r\n    );\r\n  };\r\n\r\n  export default TopBar;","C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\constants.js",[],"C:\\Users\\V\\Desktop\\Internship_project\\frontend\\project\\src\\footer.js",["44"],"import React from 'react';\r\nimport {\r\n    Toolbar,\r\n    makeStyles,\r\n    AppBar\r\n  } from '@material-ui/core';\r\nimport {THEMES} from './constants';\r\nimport clsx from 'clsx';\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position:\"fixed\",\r\n        color:\"primary\",\r\n        top: 'auto',\r\n        bottom: 0,\r\n        marginTop: 1,\r\n        \r\n    },\r\n    toolbar: {\r\n      minHeight: 64,\r\n      justifyContent: 'center',\r\n    },\r\n  }));\r\n\r\n  const BottomBar = ({\r\n    className,\r\n    onMobileNavOpen,\r\n    ...rest\r\n  }) => {\r\n    const classes = useStyles();\r\n    return (\r\n      <footer>\r\n        <AppBar\r\n        className={clsx(classes.root, className)}\r\n        {...rest}>\r\n            <Toolbar className={classes.toolbar}>\r\n            <div>\r\n                    <h3>Kalpas Internship Task</h3>\r\n            </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n      </footer>\r\n    );\r\n  };\r\n\r\n  export default BottomBar;",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":83,"column":9,"nodeType":"51","messageId":"52","endLine":83,"endColumn":20},{"ruleId":"49","severity":1,"message":"53","line":8,"column":8,"nodeType":"51","messageId":"52","endLine":8,"endColumn":14},{"ruleId":"49","severity":1,"message":"54","line":45,"column":5,"nodeType":"51","messageId":"52","endLine":45,"endColumn":12},{"ruleId":"49","severity":1,"message":"55","line":7,"column":9,"nodeType":"51","messageId":"52","endLine":7,"endColumn":15},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'SubmitStore' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'SvgIcon' is defined but never used.","'THEMES' is defined but never used.","no-global-assign","no-unsafe-negation"]